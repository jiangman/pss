<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bysj.pss.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.bysj.pss.model.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mobile_number" property="mobileNumber" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="TINYINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mobile_number, user_name, user_password, role, email, token
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getByMobile" resultType="com.bysj.pss.model.pojo.User" >
    SELECT * FROM USER WHERE mobile_number=#{mobileNumber,jdbcType=BIGINT}
  </select>
  <select id="getAllUser" resultType="com.bysj.pss.model.pojo.User" >
    SELECT * FROM USER
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bysj.pss.model.pojo.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (mobile_number, user_name, user_password, 
      role, email, token)
    values (#{mobileNumber,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{role,jdbcType=TINYINT}, #{email,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bysj.pss.model.pojo.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mobileNumber != null" >
        mobile_number,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="token != null" >
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mobileNumber != null" >
        #{mobileNumber,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=TINYINT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bysj.pss.model.pojo.User" >
    update user
    <set >
      <if test="mobileNumber != null" >
        mobile_number = #{mobileNumber,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=TINYINT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bysj.pss.model.pojo.User" >
    update user
    set mobile_number = #{mobileNumber,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      role = #{role,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>